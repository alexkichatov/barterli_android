buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }

    dependencies {
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.14.7'
    }
}

apply plugin: 'com.android.application'
/*apply plugin: 'crashlytics'*/

repositories {
    maven { url 'http://download.crashlytics.com/maven' }
}

android {

    compileSdkVersion 21
    buildToolsVersion "22"

    defaultConfig {
        applicationId "li.barter"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 9
        versionName "1.1"
        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release
    }

    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            buildConfigField "boolean", "REPORT_GOOGLE_ANALYTICS", "false"
            buildConfigField "boolean", "DEBUG_MODE", "true"
            ext.enableCrashLytics = false
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            buildConfigField "boolean", "REPORT_GOOGLE_ANALYTICS", "true"
            buildConfigField "boolean", "DEBUG_MODE", "false"
            ext.enableCrashLytics = true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libraries:androidQuickResponseCode')
    compile project(':libraries:facebookSDK')
    compile project(':libraries:enhancedvolley')
    compile project(':libraries:ViewPagerIndicator')
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.google.android.gms:play-services:6.5.87'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'com.crashlytics.android:crashlytics:1.1.13'
    compile 'uk.co.chrisjenx:calligraphy:2.0.2'

    compile('de.keyboardsurfer.android.widget:crouton:1.+') {
        exclude module: 'support-v4'
        compile 'com.android.support:support-v4:19.+'
    }
    compile 'com.github.castorflex.smoothprogressbar:library:1.0.0'
    compile('com.sothree.slidinguppanel:library:1.0.1') {
        exclude module: 'support-v4'
        compile 'com.android.support:support-v4:19.+'
    }

    androidTestCompile 'com.google.guava:guava:14.0.1',
            'com.squareup.dagger:dagger:1.1.0',
            'org.hamcrest:hamcrest-integration:1.1',
            'org.hamcrest:hamcrest-core:1.1',
            'org.hamcrest:hamcrest-library:1.1'

    androidTestCompile('junit:junit:4.11') {
        exclude module: 'hamcrest-core'
    }

    androidTestCompile 'com.squareup:fest-android:1.0.8'
}


/*
 * This loads the properties for keystore signing. Look at release.properties.sample to make your own.
 * DO NOT modify the file directly. Make a copy called 'release.properties' and edit that.
 *
 * Copy the keystore to the project root directory first.
 *
 * If you commit the keystore password to Git by calling it some other name or editing the
 * sample file, you will need to stand in the corner.
 **/
def props = new Properties()
props.load(new FileInputStream(rootProject.file("release.properties.sample")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword
